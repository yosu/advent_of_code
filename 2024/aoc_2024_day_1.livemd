# Aoc 2024 - Day 1

```elixir
Mix.install([
  {:kino, "~> 0.14.2"}
])
```

## Day 1: Historian Hysteria

https://adventofcode.com/2024/day/1

<!-- livebook:{"break_markdown":true} -->

Example input / output

```
3   4
4   3
2   5
1   3
3   9
3   3
```

```
11
```

## Part 1

```elixir
input = Kino.Input.textarea("Please the inputs:")
```

```elixir
input
|> Kino.Input.read()
|> String.split("\n", trim: true)
|> Enum.map(&(String.split(&1, " ", trim: true)))
|> Enum.map(fn pair -> Enum.map(pair, &String.to_integer/1) end)
|> Enum.reduce([[],[]], fn [a, b], [l1, l2] -> [[a|l1], [b|l2]] end)
|> Enum.map(&Enum.sort/1)
|> Enum.zip_with(fn [a, b] -> abs(a - b) end)
|> Enum.sum()
```

## Part Two

Example input / output

```
3   4
4   3
2   5
1   3
3   9
3   3
```

```
31
```

```elixir
input = Kino.Input.textarea("Please the inputs:")
```

```elixir
[left, right] = input
|> Kino.Input.read()
|> String.split("\n", trim: true)
|> Enum.map(&(String.split(&1, " ", trim: true)))
|> Enum.map(fn pair -> Enum.map(pair, &String.to_integer/1) end)
|> Enum.reduce([[],[]], fn [a, b], [l1, l2] -> [[a|l1], [b|l2]] end)

freq = right |> Enum.frequencies()

left
|> Enum.map(fn v -> Map.get(freq, v, 0) * v end)
|> Enum.sum()
```
